data <- read.csv("RDAC081.csv")
setwd("~/")
data <- read.csv("RDAC081.csv")
data <- read.csv("RDAC0801.csv")
head(data)
lable(data)
names(data)
data$CID_NOTIF
data$CID_NOTIF == 10
data$CID_NOTIF == 10
data$CID_NOTIF == 21
data$CID_ASSO
data$CID_NOTIF
data$CID_MORTE
names(data)
data <- read.csv("data.csv")
data
head(data)
data <- read.csv()
data <- read.csv("dados.csv")
data
head(data)
data <- read.csv("intANO.csv")
data
plot(data)
data <- read.csv("intANO.csv")
data
data1 <- read.csv("intANO.csv")
data1
plot
plot(data)
names(data)
data1 <- read.csv("intANO.csv")
data1
data1 <- read.csv("intANO.csv")
data1
data1
data1 <- read.csv("intANO.csv")
data1 <- read.csv("intANO.csv")
data1
data1 <- read.csv("intANO.csv")
data1
data1 <- read.csv2("intANO.csv")
data1
plot(data1$Ano,y=data1$Internacoes)
plot(data1)
plot(data1, type='1', col="green")
plot(data1$Ano, data1$Internacoes, type='1', col="green")
plot(data1$Ano, data1$Internacoes, type='2', col="green")
plot(data1$Ano, data1$Internacoes, type='4', col="green")
plot(data1$Ano, data1$Internacoes, col="green")
library(ggplot2)
library(ggplot2)
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(stat="identity") + xlab("Event type") + ylab("Total fatalities") +
ggtitle("Fatalities By Event Type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Qujantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Qujantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
0
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Qujantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio") +
theme(axis.text.x = element_text(angle = 0, hjust = 1))
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Qujantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes), col="orange") +
geom_bar(xlab("Ano") + ylab("Quantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes), col="orange")geom_bar(xlab("Ano") + ylab("Quantidade de Internações")ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes), col="orange")+geom_bar(xlab("Ano") + ylab("Quantidade de Internações")+ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes), col="orange")+geom_bar(xlab("Ano") + ylab("Quantidade de Internações")+ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")+theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(xlab("Ano") + ylab("Quantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(xlab("Ano") + ylab("Quantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(xlab("Ano") + ylab("Quantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(xlab("Ano") + ylab("Quantidade de Internações") +
ggtitle("Quantidade de Internacoes por ano por Infarto Agudo do Miocardio")
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Quantidade de Internações") +
ggtitle("Quantidade de Internacoes por ano por Infarto Agudo do Miocardio")
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Quantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
data2 <- read.csv2("medANO.csv")
data2
data2 <- read.csv2("medANO.csv")
data2
ggplot(data=data2, aes(x=data1$Ano, y=data1$Permanencia)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Média de dias das Internações") +
ggtitle("Quantidade média de dias das Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data2, aes(x=data2$Ano, y=data2Permanencia)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Média de dias das Internações") +
ggtitle("Quantidade média de dias das Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data2, aes(x=data2$Ano, y=data2$Permanencia)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Média de dias das Internações") +
ggtitle("Quantidade média de dias das Internações por ano por Infarto Agudo do Miocardio")
data3 <- read.csv2("obANO.csv")
data3
ggplot(data=data3, aes(x=data3$Ano, y=data3$Obitos)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Quantidade de Óbitos") +
ggtitle("Quantidade de Óbitos por ano por Infarto Agudo do Miocardio")
data4 <- read.csv2("valANO.csv")
data4
data4 <- read.csv2("valANO.csv")
data4
ggplot(data=data4, aes(x=data4$Ano, y=data4$Valor)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Valor Total do Tratamento") +
ggtitle("Valor Total do Tratamento por ano por Infarto Agudo do Miocardio")
options(scipen = 1)
ggplot(data=data4, aes(x=data4$Ano, y=data4$Valor)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Valor Total do Tratamento") +
ggtitle("Valor Total do Tratamento por ano por Infarto Agudo do Miocardio")
options(scipen=10000)
ggplot(data=data4, aes(x=data4$Ano, y=data4$Valor)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Valor Total do Tratamento") +
ggtitle("Valor Total do Tratamento por ano por Infarto Agudo do Miocardio")
options(scipen=1000)
ggplot(data=data4, aes(x=data4$Ano, y=data4$Valor)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Valor Total do Tratamento") +
ggtitle("Valor Total do Tratamento por ano por Infarto Agudo do Miocardio")
options(scipen=100)
ggplot(data=data4, aes(x=data4$Ano, y=data4$Valor)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Valor Total do Tratamento") +
ggtitle("Valor Total do Tratamento por ano por Infarto Agudo do Miocardio")
options(scipen=10)
ggplot(data=data4, aes(x=data4$Ano, y=data4$Valor)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Valor Total do Tratamento") +
ggtitle("Valor Total do Tratamento por ano por Infarto Agudo do Miocardio")
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Quantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data2, aes(x=data2$Ano, y=data2$Permanencia)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Média de dias das Internações") +
ggtitle("Quantidade média de dias das Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data1, aes(x=data1$Ano, y=data1$Internacoes)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Quantidade de Internações") +
ggtitle("Quantidade de Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data2, aes(x=data2$Ano, y=data2$Permanencia)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Média de dias das Internações") +
ggtitle("Quantidade média de dias das Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=data3, aes(x=data3$Ano, y=data3$Obitos)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Quantidade de Óbitos") +
ggtitle("Quantidade de Óbitos por ano por Infarto Agudo do Miocardio")
ggplot(data=data4, aes(x=data4$Ano, y=data4$Valor)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Valor Total do Tratamento") +
ggtitle("Valor Total do Tratamento por ano por Infarto Agudo do Miocardio")
citation()
sum(data4$Valor)
summary(data4)
sum(data1$Internacoes)
sum(data3$Obitos)
intVal <- sapply(data1$Ano ,data1$Internacoes/data4$Valor)
intVal <- c(data1$Ano ,data1$Internacoes/data4$Valor)
intVal
intVal <- table(data1$Ano ,data1$Internacoes/data4$Valor)
inverse.gaussian()
intVal
data1$Internacoes/data4$Valor
intVal <- table(data1$Ano ,data4$Valor/data1$Internacoes)
intVal
data4$Valor/data1$Internacoes
intVal <- table(data1$Ano, data4$Valor/data1$Internacoes)
intVal <- c(data1$Ano, data4$Valor/data1$Internacoes)
intVal
intVal$Ano <- data1$Ano
intVal$Ano <- data1$Ano
intVal$Ano
intVal$ValMed <- data4$Valor/data1$Internacoes
intVal
inVal$ValMed <- data4$Valor/data1$Internacoes
inVal$ValMed <- data4$Valor/data1$Internacoes
inVal$Ano <- data1$Ano
inVal$Ano <- data1$Ano
inVal$Ano <- data1$Ano
intVal
inVal
inVal$Ano <- c(data1$Ano)
inVal <- inVal$Ano
ano<-c(data1$Ano)
valInt<-data4$Valor/data1$Internacoes
valor<-data4$Valor/data1$Internacoes
intVal <- data.frame(ano,valor)
intVal
options(scipen=10000)
ggplot(data=intVal, aes(x=intVal$ano, y=intVal$valor)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Valor Medio Gasto") +
ggtitle("Valor Medio do Tratamento por ano por Infarto Agudo do Miocardio")
library(ggplot2)
options(scipen=10000)
ggplot(data=intVal, aes(x=intVal$ano, y=intVal$valor)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Valor Medio Gasto") +
ggtitle("Valor Medio do Tratamento por ano por Infarto Agudo do Miocardio")
pOb <- data1$Internacoes/data3$Obitos
perOB <- data.frame(ano,pOb)
perOB
options(scipen=10000)
ggplot(data=perOB, aes(x=perOB$ano, y=perOB$pOb)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Óbitos") +
ggtitle("Valor Medio do Tratamento por ano por Infarto Agudo do Miocardio")
ggplot(data=perOB, aes(x=perOB$ano, y=perOB$pOb)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Óbitos") +
ggtitle("Relação Óbito por Internações por ano por Infarto Agudo do Miocardio")
ggplot(data=perOB, aes(x=perOB$ano, y=perOB$pOb)) +
geom_bar(stat="identity") + xlab("Ano") + ylab("Óbitos") +
ggtitle("Relação Internações por Óbito por ano por Infarto Agudo do Miocardio")
?str
?ToothGrowth
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
z <- x*w
mean(z)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(x*w)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
sum(x*y)/sum(x^2)
data(mtcars)
x<-mtcars$wt
y<-mtcars$mpg
beta1<-cor(y,x)*sd(y)/sd(x)
coef(lm(mtcars$mpg~mtcars$wt))
sd(x)/sd(y)=0.5
cor(y,x)=0.5
Cor(Y, X)Sd(y)/Sd(x) = 0.5/0.5=1
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
miu <- mean(x)
S<-sd(x)
S
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
miu <- mean(x)
S<-sd(x)
(8.58 - miu)/S
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
beta1<-cor(y,x)*sd(y)/sd(x)
beta0<-mean(x) - beta1*mean(x)
coef(lm(y~x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
beta1<- cor(y,x) * sd(y)/sd(x)
y1<-cor(x,y) * sd(x)/sd(y)
beta1/y1 = (sd(y)^2) / (sd(x)^2) = var(y) / var(x)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<-lm(y~x)
summary(fit)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
# Give a P-value for the two sided hypothesis test of whether
# β1 from a linear regression model is 0 or not.
fit <- lm(y ~ x)
summary(fit)$coefficients
e <- resid(fit)
sqe <- e*e
res.var <- sum(sqe) / (length(e) - 2)
sqrt(res.var)
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
exp <- fit$coefficients[1] + mean(wt) * fit$coefficients[2]
exp - 2 * 0.5591
data(mtcars)
fit <- lm(mpg ~ wt, data = mtcars)
# Get a 95% confidence interval for the expected mpg at the average weight.
# What is the lower endpoint?
newdata <- data.frame(wt=mean(mtcars$wt))
predict(fit, newdata, interval = ("confidence"))[2]
data(mtcars)
fit <- lm(mpg ~ wt, data = mtcars)
summary(fit)
?mtcars
coef(fit)
data(mtcars)
fit <- lm(mpg ~ wt, data = mtcars)
newdata <- data.frame(wt=3)
predict(fit, newdata, interval = ('prediction'))[3]
summary(fit)
2 * (fit$coefficients[2] - 2 * 0.5591)
data(mtcars)
wtOvr2 <- mtcars$wt / 2
fit <- lm(mtcars$mpg ~ wtOvr2)
coef <- summary(fit)$coefficients
coef[2,1] - qt(.975, df = fit$df) * coef[2,2]
data(mtcars)
# About what is the ratio of the the sum of the squared errors
# when comparing a model with just an intercept (denominator)
y <- mtcars$mpg; x <- mtcars$wt; n <- length(y)
fit <- lm(y ~ x - 1)
beta1 <- summary(fit)$coefficients[1]
e <- y - beta1*x
sse1 <- sum(e^2)
# to the model with the intercept and slope (numerator)?
y <- mtcars$mpg; x <- mtcars$wt; n <- length(y)
beta1 <- cor(y, x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sse2 <- sum(e^2)
# this is not what the question asked for (it asked for sse2/sse1)
# but hey, it worked
sqrt(sse2)/sqrt(sse1)
# with the intercept and slope (numerator)
fit<-lm(mpg~wt, data=mtcars)
e1<-resid(fit)
# just an intercept (denominator)
fit2<-lm(mpg~1, data=mtcars)
e2<-resid(fit2)
sum(e1^2)/sum(e2^2)
or
deviance(fit)/deviance(fit2)
plot(mpg~wt, data=mtcars,xlim=range(0,mtcars$wt), ylim=range(0,mtcars$mpg))
abline(lm(mpg~wt, data=mtcars),col="blue")  # with the intercept and slope
abline(lm(mpg~1, data=mtcars),col="red")  # just an intercept
abline(lm(mpg~wt-1, data=mtcars),col="green")  # remove an intercept, just slop
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
# Give a P-value for the two sided hypothesis test of whether
# β1 from a linear regression model is 0 or not.
fit <- lm(y ~ x)
summary(fit)$coefficients
?mtcars
data(mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(fit)
fit2 <- lm(mpg ~ factor(cyl), mtcars)
summary(fit2)
fit<-lm(mpg~factor(cyl)+wt, data=mtcars)
fit$coeff
fit2<-lm(mpg~factor(cyl), data=mtcars)
fit2$coeff
summary(fit)$cov
fit3 <- lm(mpg ~ factor(cyl)*wt, mtcars)
summary(fit3)
fit<-lm(mpg~factor(cyl)+wt, data=mtcars)
fit2<-update(fit, mpg~factor(cyl)+wt+factor(cyl)*wt)
anova(fit, fit2)
library(caret)
library(rpart)
library(tree)
library(randomForest)
library(e1071)
library(ggplot2)
setwd("~/Kaggle-Titanic")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
library(rpart)
install.packages("random")
library("randomForest", lib.loc="~/R/win-library/3.2")
install.packages("randomForest")
library(randomForest)
library(randomForest)
install.packages("party")
library(rpart)
library(party)
library(party)
library(party)
install.packages("party")
library(party)
library(party)
library(party)
# Join together the test and train sets for easier feature engineering
test$Survived <- NA
combi <- rbind(train, test)
# Convert to a string
combi$Name <- as.character(combi$Name)
# Engineered variable: Title
combi$Title <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
combi$Title <- sub(' ', '', combi$Title)
# Combine small title groups
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
# Convert to a factor
combi$Title <- factor(combi$Title)
# Engineered variable: Family size
combi$FamilySize <- combi$SibSp + combi$Parch + 1
# Engineered variable: Family
combi$Surname <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize), combi$Surname, sep="")
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
# Delete erroneous family IDs
famIDs <- data.frame(table(combi$FamilyID))
famIDs <- famIDs[famIDs$Freq <= 2,]
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
# Convert to a factor
combi$FamilyID <- factor(combi$FamilyID)
# Fill in Age NAs
summary(combi$Age)
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,
data=combi[!is.na(combi$Age),], method="anova")
combi$Age[is.na(combi$Age)] <- predict(Agefit, combi[is.na(combi$Age),])
# Check what else might be missing
summary(combi)
# Fill in Embarked blanks
summary(combi$Embarked)
which(combi$Embarked == '')
combi$Embarked[c(62,830)] = "S"
combi$Embarked <- factor(combi$Embarked)
# Fill in Fare NAs
summary(combi$Fare)
which(is.na(combi$Fare))
combi$Fare[1044] <- median(combi$Fare, na.rm=TRUE)
# New factor for Random Forests, only allowed <32 levels, so reduce number
combi$FamilyID2 <- combi$FamilyID
# Convert back to string
combi$FamilyID2 <- as.character(combi$FamilyID2)
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
# And convert back to factor
combi$FamilyID2 <- factor(combi$FamilyID2)
# Split back into test and train sets
train <- combi[1:891,]
test <- combi[892:1309,]
# Build Random Forest Ensemble
set.seed(415)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID2,
data=train, importance=TRUE, ntree=2000)
# Look at variable importance
varImpPlot(fit)
# Now let's make a prediction and write a submission file
Prediction <- predict(fit, test)
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "subA.csv", row.names = FALSE)
# Build condition inference tree Random Forest
set.seed(415)
fit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,
data = train, controls=cforest_unbiased(ntree=2000, mtry=3))
# Now let's make a prediction and write a submission file
Prediction <- predict(fit, test, OOB=TRUE, type = "response")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "sub2.csv", row.names = FALSE)
